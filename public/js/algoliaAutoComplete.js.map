{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./resources/js/utils/algoliaAutoComplete.js"],"names":["enterPressed","searchClient","algoliasearch","index","initIndex","autocomplete","hint","source","sources","hits","hitsPerPage","displayKey","templates","suggestion","markup","window","location","origin","image","_highlightResult","name","value","price","toFixed","details","empty","result","query","on","event","dataset","href","slug","keyCode","queryString","document","getElementById"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA,CAAC,YAAW;AACR,MAAIA,YAAY,GAAG,KAAnB;AACA,MAAMC,YAAY,GAAGC,aAAa,CAC9B,YAD8B,EAE9B,kCAF8B,CAAlC;AAIA,MAAMC,KAAK,GAAGF,YAAY,CAACG,SAAb,CAAuB,UAAvB,CAAd,CANQ,CAOR;;AACAC,cAAY,CACR,kBADQ,EAER;AAAEC,QAAI,EAAE;AAAR,GAFQ,EAGR;AACIC,UAAM,EAAEF,YAAY,CAACG,OAAb,CAAqBC,IAArB,CAA0BN,KAA1B,EAAiC;AAAEO,iBAAW,EAAE;AAAf,KAAjC,CADZ;AAEI;AACAC,cAAU,EAAE,MAHhB;AAII;AACAC,aAAS,EAAE;AACP;AACAC,gBAAU,EAAE,oBAASA,WAAT,EAAqB;AAC7B,YAAMC,MAAM,sJAIYC,MAAM,CAACC,QAAP,CAAgBC,MAJ5B,sBAI8CJ,WAAU,CAACK,KAJzD,sFAKEL,WAAU,CAACM,gBAAX,CAA4BC,IAA5B,CAAiCC,KALnC,uFAOK,CAACR,WAAU,CAACS,KAAX,GAAmB,GAApB,EAAyBC,OAAzB,CAAiC,CAAjC,CAPL,iJAWAV,WAAU,CAACM,gBAAX,CAA4BK,OAA5B,CAAoCH,KAXpC,kEAAZ;AAgBA,eAAOP,MAAP;AACH,OApBM;AAqBPW,WAAK,EAAE,eAASC,MAAT,EAAiB;AACpB,gEAAiDA,MAAM,CAACC,KAAxD;AACH;AAvBM;AALf,GAHQ,CAmCR;AAnCQ,GAAZ,CAoCEC,EApCF,CAoCK,uBApCL,EAoC8B,UAASC,KAAT,EAAgBhB,UAAhB,EAA4BiB,OAA5B,EAAqC;AAC/Df,UAAM,CAACC,QAAP,CAAgBe,IAAhB,GAAuBhB,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,QAAzB,GAAoCJ,UAAU,CAACmB,IAAtE;AACAhC,gBAAY,GAAG,IAAf,CAF+D,CAI/D;AACH,GAzCD,EAyCG4B,EAzCH,CAyCM,OAzCN,EAyCe,UAACC,KAAD,EAAW;AACtB,QAAIA,KAAK,CAACI,OAAN,IAAiB,EAAjB,IAAuB,CAACjC,YAA5B,EAA0C;AACtC,UAAIkC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2Cf,KAA7D;AACAN,YAAM,CAACC,QAAP,CAAgBe,IAAhB,GAAuBhB,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,uBAAzB,GAAmDiB,WAA1E;AACH;AACJ,GA9CD;AA+CH,CAvDD,I","file":"/js/algoliaAutoComplete.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","(function() {\r\n    let enterPressed = false;\r\n    const searchClient = algoliasearch(\r\n        \"VGYGZLD5IE\",\r\n        \"08ef944b22bafb7eda508b643fe26518\"\r\n    );\r\n    const index = searchClient.initIndex(\"products\");\r\n    //initialize autocomplete on search input (ID selector must match)\r\n    autocomplete(\r\n        \"#aa-search-input\",\r\n        { hint: true },\r\n        {\r\n            source: autocomplete.sources.hits(index, { hitsPerPage: 10 }),\r\n            //value to be displayed in input control after user's suggestion selection\r\n            displayKey: \"name\",\r\n            //hash of templates used when rendering dataset\r\n            templates: {\r\n                //'suggestion' templating function used to render a single suggestion\r\n                suggestion: function(suggestion) {\r\n                    const markup = \r\n                    `\r\n                        <div class=\"algolia-result\">\r\n                            <span>\r\n                                <img src=\"${window.location.origin}/storage/${suggestion.image}\" alt=\"img\" class=\"algolia-thumb\">\r\n                                ${suggestion._highlightResult.name.value}\r\n                            </span>\r\n                            <span>$${(suggestion.price / 100).toFixed(2)}</span>\r\n                        </div>\r\n                        <div class=\"algolia-details\">\r\n                            <span>${\r\n                                suggestion._highlightResult.details.value\r\n                            }</span>\r\n                        </div>\r\n                    `;\r\n\r\n                    return markup;\r\n                },\r\n                empty: function(result) {\r\n                    return `Sorry, we did not find any results for ${result.query}`;\r\n                }\r\n            }\r\n        }\r\n\r\n        //* Go direct to the detail page\r\n    ).on(\"autocomplete:selected\", function(event, suggestion, dataset) {\r\n        window.location.href = window.location.origin + \"/shop/\" + suggestion.slug;\r\n        enterPressed = true;\r\n\r\n        //* Go to the search result page\r\n    }).on('keyup', (event) => {\r\n        if (event.keyCode == 13 && !enterPressed) {\r\n            let queryString = document.getElementById('aa-search-input').value\r\n            window.location.href = window.location.origin + '/algoliasearch?query=' + queryString;\r\n        }\r\n    });\r\n})();\r\n"],"sourceRoot":""}